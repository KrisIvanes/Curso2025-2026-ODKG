# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QZeY9ff146Eobawdu2WFdDHb7KiN_oMh

**Task 08: Completing missing data**
"""

"""!pip install rdflib"""
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

for s,p,o in g1:
  print(s,p,o)

for s,p,o in g2:
  print(s,p,o)

from rdflib import RDF
from rdflib.namespace import FOAF

# Espacio de nombres (en caso de que se use FOAF)
foaf = FOAF
# Espacio de nombres VCARD
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

# Iterar sobre todas las personas del primer grafo
for person in g1.subjects(RDF.type, URIRef("http://data.org#Person")):
    print(f"\nPersona: {person}")

    given = g1.value(person, VCARD.Given)
    family = g1.value(person, VCARD.Family)
    email = g1.value(person, VCARD.EMAIL)

    print("  Given:", given)
    print("  Family:", family)
    print("  Email:", email)

    # Completar datos faltantes con g2
    if not (given and family and email):
        if (person, None, None) in g2:
            given2 = g2.value(person, VCARD.Given)
            family2 = g2.value(person, VCARD.Family)
            email2 = g2.value(person, VCARD.EMAIL)

            if not given and given2:
                g1.add((person, VCARD.Given, given2))
                print("  → Añadido Given desde g2:", given2)
            if not family and family2:
                g1.add((person, VCARD.Family, family2))
                print("  → Añadido Family desde g2:", family2)
            if not email and email2:
                g1.add((person, VCARD.EMAIL, email2))
                print("  → Añadido Email desde g2:", email2)

print("\n✅ Datos completados en g1 con éxito.")

# Iterar de nuevo para ver si está completo
for person in g1.subjects(RDF.type, URIRef("http://data.org#Person")):
    print(f"\nPersona: {person}")

    given = g1.value(person, VCARD.Given)
    family = g1.value(person, VCARD.Family)
    email = g1.value(person, VCARD.EMAIL)

    print("  Given:", given)
    print("  Family:", family)
    print("  Email:", email)

